PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE issue_type (
	id INTEGER PRIMARY KEY,
	type TEXT UNIQUE NOT NULL
);
INSERT INTO issue_type VALUES(1,'Task');
INSERT INTO issue_type VALUES(2,'Subtask');
INSERT INTO issue_type VALUES(3,'Epic');
INSERT INTO issue_type VALUES(4,'Bug');
INSERT INTO issue_type VALUES(5,'Story');
INSERT INTO issue_type VALUES(6,'Change');
INSERT INTO issue_type VALUES(7,'IT help');
INSERT INTO issue_type VALUES(8,'Incident');
INSERT INTO issue_type VALUES(9,'New feature');
INSERT INTO issue_type VALUES(10,'Problem');
INSERT INTO issue_type VALUES(11,'Service request');
INSERT INTO issue_type VALUES(12,'Support');
CREATE TABLE application (
	id INTEGER PRIMARY KEY,
	application TEXT UNIQUE NOT NULL
);
INSERT INTO application VALUES(1,'GitLab infrastructure');
INSERT INTO application VALUES(2,'GitLab runners');
INSERT INTO application VALUES(3,'GitLab');
INSERT INTO application VALUES(4,'Hashicorp Vault');
INSERT INTO application VALUES(5,'Elasticsearch');
INSERT INTO application VALUES(6,'Kubereview');
INSERT INTO application VALUES(7,'Ansible repository');
INSERT INTO application VALUES(8,'SCMDB');
INSERT INTO application VALUES(9,'TeamForge');
INSERT INTO application VALUES(10,'BDT and AWP');
INSERT INTO application VALUES(11,'NGINX');
INSERT INTO application VALUES(12,'SWE build machines');
INSERT INTO application VALUES(13,'SVT machines');
CREATE TABLE person (
	id INTEGER PRIMARY KEY,
	name TEXT UNIQUE NOT NULL
);
INSERT INTO person VALUES(1,'Dacoda Strack');
INSERT INTO person VALUES(2,'Phil Eurs');
INSERT INTO person VALUES(3,'Jim Bush');
INSERT INTO person VALUES(4,'Vytautas Vysniauskas');
CREATE TABLE issue_relation (
	id INTEGER PRIMARY KEY,
	relation TEXT UNIQUE NOT NULL
);
INSERT INTO issue_relation VALUES(1,'Parent');
INSERT INTO issue_relation VALUES(2,'Start to start');
INSERT INTO issue_relation VALUES(3,'Start to finish');
INSERT INTO issue_relation VALUES(4,'Finish to start');
INSERT INTO issue_relation VALUES(5,'Finish to finish');
INSERT INTO issue_relation VALUES(6,'Relates');
INSERT INTO issue_relation VALUES(7,'Duplicates');
INSERT INTO issue_relation VALUES(8,'Blocks');
CREATE TABLE issue_link (
	id INTEGER PRIMARY KEY,
	outward INTEGER,
	inward INTEGER,
	relation INTEGER,
	CONSTRAINT outward_fk FOREIGN KEY (outward) REFERENCES issue (id),
	CONSTRAINT inward_fk FOREIGN KEY (inward) REFERENCES issue (id),
	CONSTRAINT relation_fk FOREIGN KEY (relation) REFERENCES issue_relation (id)
);
CREATE TABLE issue (
	id INTEGER PRIMARY KEY,
	type INTEGER,
	application INTEGER,
	assignee INTEGER,
	summary TEXT,
	description TEXT,
	CONSTRAINT application_fk FOREIGN KEY (application) REFERENCES application (id),
	CONSTRAINT type_fk FOREIGN KEY (type) REFERENCES issue_type (id),
	CONSTRAINT assignee_fk FOREIGN KEY (assignee) REFERENCES person (id)
);
COMMIT;
